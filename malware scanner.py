#malware_scanner/
#│
#├── malware_signatures.txt
#├── scanner.py
#└── files_to_scan/

import os
import hashlib

def load_signatures(signatures_file):
    with open(signatures_file, 'r') as file:
        signatures = [line.strip() for line in file]
    return signatures

def calculate_file_hash(file_path):
    try:
        hasher = hashlib.sha256()
        with open(file_path, 'rb') as file:
            while True:
                data = file.read(65536)  # Read in 64k chunks
                if not data:
                    break
                hasher.update(data)
        return hasher.hexdigest()
    except Exception as e:
        print(f"Error calculating hash for {file_path}: {e}")
        return None

def scan_directory(directory, signatures):
    malware_files = []
    for root, _, files in os.walk(directory):
        for filename in files:
            file_path = os.path.join(root, filename)
            file_hash = calculate_file_hash(file_path)
            if file_hash in signatures:
                malware_files.append(file_path)
    return malware_files

def main():
    signatures_file = 'malware_signatures.txt'
    scan_directory_path = 'files_to_scan'

    if not os.path.exists(scan_directory_path):
        print(f"Directory '{scan_directory_path}' does not exist.")
        return

    signatures = load_signatures(signatures_file)

    malware_files = scan_directory(scan_directory_path, signatures)

    if malware_files:
        print("Malware detected in the following files:")
        for file_path in malware_files:
            print(file_path)
    else:
        print("No malware detected.")

if __name__ == '__main__':
    main()
